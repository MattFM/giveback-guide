---
import NavigationDrawer from './NavigationDrawer.astro';

interface Props {
  variant?: 'default' | 'transparent';
  theme?: 'light' | 'dark';
}

const { variant = 'default', theme = 'light' } = Astro.props;

// Tailwind classes for header positioning and background
const positionClasses = variant === 'transparent' 
  ? 'absolute top-0 left-0 right-0 z-50' 
  : 'relative';

const bgClasses = variant === 'transparent'
  ? 'bg-transparent'
  : 'bg-white border-b border-gray-200';

// Logo color - white for dark theme, black for light
const logoFillClass = theme === 'dark' ? 'fill-white' : 'fill-black';

// Link colors
const linkClasses = theme === 'dark'
  ? 'text-white hover:text-white/80'
  : 'text-gray-700 hover:text-purple-600';

// Search button colors
const searchButtonClasses = theme === 'dark'
  ? 'bg-white/10 border-white/20 text-white hover:bg-white/20'
  : 'bg-white border-gray-200 text-gray-600 hover:bg-gray-100';

// Mobile menu button colors  
const mobileButtonClasses = theme === 'dark'
  ? 'text-white hover:bg-white/10'
  : 'text-gray-500 hover:bg-gray-100';
---

<a
  href="#main-content"
  class="sr-only focus:not-sr-only absolute left-2 top-2 bg-white text-black p-2 z-50 rounded"
>
  Skip to main content
</a>
<header role="banner" class={`w-full ${positionClasses} ${bgClasses}`}>
  <nav
    role="navigation"
    aria-label="Main navigation"
    class="w-full px-4 lg:px-6 py-2.5"
  >
    <div
      class="flex flex-wrap justify-between items-center mx-auto max-w-screen-xl"
    >
      <a
        href="/"
        class="flex items-center focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 rounded cursor-pointer"
      >
        <svg class={`w-12 h-12 ${logoFillClass}`} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 750 749.999995" aria-label="Giveback Guide">
          <g>
            <g>
              <g transform="translate(0.00000265, 258.603195)">
                <path d="M 125.515625 -120.84375 C 123.265625 -124.476562 120.066406 -127.285156 115.921875 -129.265625 C 111.773438 -131.253906 106.757812 -132.25 100.875 -132.25 C 89.8125 -132.25 81.253906 -128.660156 75.203125 -121.484375 C 69.148438 -114.316406 66.125 -104.507812 66.125 -92.0625 C 66.125 -77.707031 69.492188 -66.984375 76.234375 -59.890625 C 82.984375 -52.804688 93.359375 -49.265625 107.359375 -49.265625 C 120.671875 -49.265625 131.390625 -54.625 139.515625 -65.34375 L 93.625 -65.34375 L 93.625 -106.0625 L 187.234375 -106.0625 L 187.234375 -48.5 C 179.285156 -34.832031 168.304688 -23.113281 154.296875 -13.34375 C 140.296875 -3.582031 122.578125 1.296875 101.140625 1.296875 C 82.117188 1.296875 65.5625 -2.632812 51.46875 -10.5 C 37.382812 -18.363281 26.582031 -29.382812 19.0625 -43.5625 C 11.539062 -57.738281 7.78125 -73.90625 7.78125 -92.0625 C 7.78125 -110.21875 11.539062 -126.382812 19.0625 -140.5625 C 26.582031 -154.738281 37.34375 -165.757812 51.34375 -173.625 C 65.351562 -181.488281 81.78125 -185.421875 100.625 -185.421875 C 124.65625 -185.421875 144.234375 -179.628906 159.359375 -168.046875 C 174.484375 -156.460938 183.429688 -140.726562 186.203125 -120.84375 Z M 125.515625 -120.84375 "/>
              </g>
            </g>
            <g>
              <g transform="translate(184.640574, 258.603195)">
                <path d="M 70.53125 -183.609375 L 70.53125 0 L 12.96875 0 L 12.96875 -183.609375 Z M 70.53125 -183.609375 "/>
              </g>
            </g>
            <g>
              <g transform="translate(257.77056, 258.603195)">
                <path d="M 197.875 -183.609375 L 136.140625 0 L 61.71875 0 L 0 -183.609375 L 61.203125 -183.609375 L 99.0625 -57.3125 L 136.671875 -183.609375 Z M 197.875 -183.609375 "/>
              </g>
            </g>
            <g>
              <g transform="translate(445.263778, 258.603195)">
                <path d="M 70.53125 -137.703125 L 70.53125 -115.140625 L 127.59375 -115.140625 L 127.59375 -71.828125 L 70.53125 -71.828125 L 70.53125 -45.90625 L 135.375 -45.90625 L 135.375 0 L 12.96875 0 L 12.96875 -183.609375 L 135.375 -183.609375 L 135.375 -137.703125 Z M 70.53125 -137.703125 "/>
              </g>
            </g>
            <g>
              <g transform="translate(0.00000265, 465.603185)">
                <path d="M 135.890625 -94.140625 C 146.953125 -91.546875 155.550781 -86.226562 161.6875 -78.1875 C 167.820312 -70.144531 170.890625 -60.851562 170.890625 -50.3125 C 170.890625 -34.226562 165.570312 -21.820312 154.9375 -13.09375 C 144.3125 -4.363281 129.054688 0 109.171875 0 L 12.96875 0 L 12.96875 -183.609375 L 106.578125 -183.609375 C 125.253906 -183.609375 139.953125 -179.546875 150.671875 -171.421875 C 161.390625 -163.296875 166.75 -151.453125 166.75 -135.890625 C 166.75 -125.171875 163.9375 -116.132812 158.3125 -108.78125 C 152.695312 -101.4375 145.222656 -96.554688 135.890625 -94.140625 Z M 70.53125 -112.03125 L 92.84375 -112.03125 C 98.03125 -112.03125 101.875 -113.066406 104.375 -115.140625 C 106.882812 -117.210938 108.140625 -120.410156 108.140625 -124.734375 C 108.140625 -129.234375 106.882812 -132.5625 104.375 -134.71875 C 101.875 -136.882812 98.03125 -137.96875 92.84375 -137.96875 L 70.53125 -137.96875 Z M 96.734375 -46.15625 C 101.921875 -46.15625 105.765625 -47.148438 108.265625 -49.140625 C 110.773438 -51.128906 112.03125 -54.375 112.03125 -58.875 C 112.03125 -67.6875 106.929688 -72.09375 96.734375 -72.09375 L 70.53125 -72.09375 L 70.53125 -46.15625 Z M 96.734375 -46.15625 "/>
              </g>
            </g>
            <g>
              <g transform="translate(167.006365, 465.603185)">
                <path d="M 130.703125 -27.75 L 69.5 -27.75 L 60.421875 0 L 0 0 L 67.171875 -183.609375 L 133.546875 -183.609375 L 200.453125 0 L 139.78125 0 Z M 116.703125 -71.0625 L 100.09375 -122.140625 L 83.5 -71.0625 Z M 116.703125 -71.0625 "/>
              </g>
            </g>
            <g>
              <g transform="translate(357.092775, 465.603185)">
                <path d="M 7.78125 -92.0625 C 7.78125 -110.21875 11.453125 -126.382812 18.796875 -140.5625 C 26.148438 -154.738281 36.65625 -165.757812 50.3125 -173.625 C 63.96875 -181.488281 80.046875 -185.421875 98.546875 -185.421875 C 114.453125 -185.421875 128.671875 -182.4375 141.203125 -176.46875 C 153.734375 -170.507812 163.929688 -162.082031 171.796875 -151.1875 C 179.671875 -140.289062 184.90625 -127.582031 187.5 -113.0625 L 126.8125 -113.0625 C 124.039062 -119.113281 120.101562 -123.820312 115 -127.1875 C 109.90625 -130.5625 104.070312 -132.25 97.5 -132.25 C 87.820312 -132.25 80.171875 -128.617188 74.546875 -121.359375 C 68.929688 -114.097656 66.125 -104.332031 66.125 -92.0625 C 66.125 -79.789062 68.929688 -70.019531 74.546875 -62.75 C 80.171875 -55.488281 87.820312 -51.859375 97.5 -51.859375 C 104.070312 -51.859375 109.90625 -53.546875 115 -56.921875 C 120.101562 -60.296875 124.039062 -65.007812 126.8125 -71.0625 L 187.5 -71.0625 C 184.90625 -56.53125 179.671875 -43.816406 171.796875 -32.921875 C 163.929688 -22.035156 153.734375 -13.609375 141.203125 -7.640625 C 128.671875 -1.679688 114.453125 1.296875 98.546875 1.296875 C 80.046875 1.296875 63.96875 -2.632812 50.3125 -10.5 C 36.65625 -18.363281 26.148438 -29.382812 18.796875 -43.5625 C 11.453125 -57.738281 7.78125 -73.90625 7.78125 -92.0625 Z M 7.78125 -92.0625 "/>
              </g>
            </g>
            <g>
              <g transform="translate(541.992764, 465.603185)">
                <path d="M 123.953125 0 L 70.53125 -79.609375 L 70.53125 0 L 12.96875 0 L 12.96875 -183.609375 L 70.53125 -183.609375 L 70.53125 -106.328125 L 123.1875 -183.609375 L 188.265625 -183.609375 L 125 -95.6875 L 192.421875 0 Z M 123.953125 0 "/>
              </g>
            </g>
            <g>
              <g transform="translate(0.00000265, 672.603174)">
                <path d="M 125.515625 -120.84375 C 123.265625 -124.476562 120.066406 -127.285156 115.921875 -129.265625 C 111.773438 -131.253906 106.757812 -132.25 100.875 -132.25 C 89.8125 -132.25 81.253906 -128.660156 75.203125 -121.484375 C 69.148438 -114.316406 66.125 -104.507812 66.125 -92.0625 C 66.125 -77.707031 69.492188 -66.984375 76.234375 -59.890625 C 82.984375 -52.804688 93.359375 -49.265625 107.359375 -49.265625 C 120.671875 -49.265625 131.390625 -54.625 139.515625 -65.34375 L 93.625 -65.34375 L 93.625 -106.0625 L 187.234375 -106.0625 L 187.234375 -48.5 C 179.285156 -34.832031 168.304688 -23.113281 154.296875 -13.34375 C 140.296875 -3.582031 122.578125 1.296875 101.140625 1.296875 C 82.117188 1.296875 65.5625 -2.632812 51.46875 -10.5 C 37.382812 -18.363281 26.582031 -29.382812 19.0625 -43.5625 C 11.539062 -57.738281 7.78125 -73.90625 7.78125 -92.0625 C 7.78125 -110.21875 11.539062 -126.382812 19.0625 -140.5625 C 26.582031 -154.738281 37.34375 -165.757812 51.34375 -173.625 C 65.351562 -181.488281 81.78125 -185.421875 100.625 -185.421875 C 124.65625 -185.421875 144.234375 -179.628906 159.359375 -168.046875 C 174.484375 -156.460938 183.429688 -140.726562 186.203125 -120.84375 Z M 125.515625 -120.84375 "/>
              </g>
            </g>
            <g>
              <g transform="translate(184.640574, 672.603174)">
                <path d="M 69.234375 -183.609375 L 69.234375 -80.125 C 69.234375 -71.65625 71.09375 -64.957031 74.8125 -60.03125 C 78.53125 -55.101562 84.539062 -52.640625 92.84375 -52.640625 C 101.132812 -52.640625 107.269531 -55.101562 111.25 -60.03125 C 115.226562 -64.957031 117.21875 -71.65625 117.21875 -80.125 L 117.21875 -183.609375 L 174.53125 -183.609375 L 174.53125 -80.125 C 174.53125 -62.664062 170.898438 -47.753906 163.640625 -35.390625 C 156.378906 -23.035156 146.4375 -13.742188 133.8125 -7.515625 C 121.1875 -1.296875 107.097656 1.8125 91.546875 1.8125 C 75.984375 1.8125 62.191406 -1.296875 50.171875 -7.515625 C 38.160156 -13.742188 28.78125 -22.992188 22.03125 -35.265625 C 15.289062 -47.546875 11.921875 -62.5 11.921875 -80.125 L 11.921875 -183.609375 Z M 69.234375 -183.609375 "/>
              </g>
            </g>
            <g>
              <g transform="translate(360.723345, 672.603174)">
                <path d="M 70.53125 -183.609375 L 70.53125 0 L 12.96875 0 L 12.96875 -183.609375 Z M 70.53125 -183.609375 "/>
              </g>
            </g>
            <g>
              <g transform="translate(433.853377, 672.603174)">
                <path d="M 89.46875 -183.609375 C 108.65625 -183.609375 125.46875 -179.71875 139.90625 -171.9375 C 154.34375 -164.15625 165.453125 -153.347656 173.234375 -139.515625 C 181.015625 -125.679688 184.90625 -109.953125 184.90625 -92.328125 C 184.90625 -74.859375 181.015625 -59.125 173.234375 -45.125 C 165.453125 -31.125 154.34375 -20.101562 139.90625 -12.0625 C 125.46875 -4.019531 108.65625 0 89.46875 0 L 12.96875 0 L 12.96875 -183.609375 Z M 84.28125 -51.34375 C 97.25 -51.34375 107.535156 -54.882812 115.140625 -61.96875 C 122.742188 -69.0625 126.546875 -79.179688 126.546875 -92.328125 C 126.546875 -105.460938 122.742188 -115.570312 115.140625 -122.65625 C 107.535156 -129.75 97.25 -133.296875 84.28125 -133.296875 L 70.53125 -133.296875 L 70.53125 -51.34375 Z M 84.28125 -51.34375 "/>
              </g>
            </g>
            <g>
              <g transform="translate(616.160038, 672.603174)">
                <path d="M 70.53125 -137.703125 L 70.53125 -115.140625 L 127.59375 -115.140625 L 127.59375 -71.828125 L 70.53125 -71.828125 L 70.53125 -45.90625 L 135.375 -45.90625 L 135.375 0 L 12.96875 0 L 12.96875 -183.609375 L 135.375 -183.609375 L 135.375 -137.703125 Z M 70.53125 -137.703125 "/>
              </g>
            </g>
          </g>
        </svg>
      </a>
      <div class="flex items-center lg:order-2">
        <!-- Search Modal Trigger -->
        <button
          id="search-button"
          type="button"
          class={`cursor-pointer font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center me-2 border ${searchButtonClasses}`}
        >
          <svg
            class="w-6 h-6 me-2"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-width="2"
              d="m21 21-3.5-3.5M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z"></path>
          </svg>
          <span class="block lg:hidden">Search</span>
          <span class="hidden lg:flex lg:items-center lg:space-x-2">
            <span>Search</span>
            <div class="flex items-center ml-2 text-xs text-gray-400">
              <kbd
                id="search-kbd"
                class="px-2 py-0.5 bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded text-xs font-mono"
                >⌘K</kbd
              >
            </div>
          </span>
        </button>

        <!-- Auth-aware CTAs: zero-flicker, both hidden until detection runs -->
        <a
          id="header-dashboard-link"
          href="/auth/dashboard"
          class="cursor-pointer text-white bg-black hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center me-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
          style="display:none;"
          aria-hidden="true"
        >
          <svg
            class="w-6 h-6 me-2"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            viewBox="0 0 24 24"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 21a9 9 0 1 0 0-18 9 9 0 0 0 0 18Zm0 0a8.949 8.949 0 0 0 4.951-1.488A3.987 3.987 0 0 0 13 16h-2a3.987 3.987 0 0 0-3.951 3.512A8.948 8.948 0 0 0 12 21Zm3-11a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
            ></path>
          </svg>
          <span class="block lg:hidden">Dash</span>
          <span class="hidden lg:block">Dashboard</span>
        </a>
        <a
          id="header-join-link"
          href="/join"
          class="cursor-pointer text-white bg-black hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center me-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
          style="display:none;"
          aria-hidden="true"
        >
          <svg
            class="w-6 h-6 me-2"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            viewBox="0 0 24 24"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-width="2"
              d="M4.5 17H4a1 1 0 0 1-1-1 3 3 0 0 1 3-3h1m0-3.05A2.5 2.5 0 1 1 9 5.5M19.5 17h.5a1 1 0 0 0 1-1 3 3 0 0 0-3-3h-1m0-3.05a2.5 2.5 0 1 0-2-4.45m.5 13.5h-7a1 1 0 0 1-1-1 3 3 0 0 1 3-3h3a3 3 0 0 1 3 3 1 1 0 0 1-1 1Zm-1-9.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0Z"
            ></path>
          </svg>
          <span class="block lg:hidden">Join</span>
          <span class="hidden lg:block">Join our community</span>
        </a>

        <!-- Auth-aware CTAs: zero-flicker, both hidden until detection runs -->
        <script is:inline>
          (async function () {
            try {
              const dash = document.getElementById("header-dashboard-link");
              const join = document.getElementById("header-join-link");
              if (!dash || !join) return;

              function setVisible(el, visible) {
                el.style.display = visible ? "inline-flex" : "none";
                el.setAttribute("aria-hidden", visible ? "false" : "true");
              }

              // Use the same reliable auth detection logic as getCurrentUser()
              async function getCurrentUserReliable() {
                try {
                  let authToken = null;
                  
                  // Find the Supabase auth token using the same logic as getCurrentUser()
                  if (typeof window !== "undefined" && "localStorage" in window) {
                    for (let i = 0; i < localStorage.length; i++) {
                      const k = localStorage.key(i);
                      if (k && /^sb-.*-auth-token$/.test(k)) {
                        const v = localStorage.getItem(k);
                        if (v && v !== "null" && v !== "undefined") {
                          authToken = v;
                          break;
                        }
                      }
                    }
                  }
                  
                  if (authToken) {
                    try {
                      // Parse the actual Supabase session data
                      const sessionData = JSON.parse(authToken);
                      // Extract user from session data (Supabase format)
                      const user = sessionData?.user || sessionData?.data?.user || sessionData?.session?.user;
                      return user || null;
                    } catch (parseError) {
                      console.error('Header: Failed to parse auth token:', parseError);
                    }
                  }
                  
                  return null;
                } catch {
                  return null;
                }
              }

              async function decideAndToggle() {
                try {
                  const user = await getCurrentUserReliable();
                  const loggedIn = !!user;
                  console.log('Header auth check:', { hasUser: loggedIn, userId: user?.id });
                  setVisible(dash, loggedIn);
                  setVisible(join, !loggedIn);
                } catch (error) {
                  console.error('Header auth check failed:', error);
                  // On error, show join button (safer default)
                  setVisible(dash, false);
                  setVisible(join, true);
                }
              }

              // Run immediately 
              await decideAndToggle();
              
              // Re-run on DOM and load in case of timing issues
              document.addEventListener("DOMContentLoaded", decideAndToggle, {
                once: true,
              });
              window.addEventListener("load", decideAndToggle);
              
              // React to auth changes from other tabs/windows
              window.addEventListener("storage", function (e) {
                const k = (e && e.key) || "";
                if (
                  /^sb-.*-auth-token$/.test(k) ||
                  k.indexOf("supabase.auth.token") !== -1
                ) {
                  decideAndToggle();
                }
              });
            } catch (error) {
              console.error('Header initialization failed:', error);
            }
          })();
        </script>

        <!-- Mobile Menu Toggle -->
        <button
          id="mobile-menu-button"
          type="button"
          class={`inline-flex items-center p-2 ml-1 text-sm rounded-lg lg:hidden focus:outline-none focus:ring-2 focus:ring-gray-200 ${mobileButtonClasses}`}
          aria-label="Open menu"
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Hamburger icon SVG -->
          <svg
            class="w-6 h-6"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
              clip-rule="evenodd"></path>
          </svg>
          <!-- Close icon SVG (hidden by default) -->
          <svg
            class="hidden w-6 h-6"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              clip-rule="evenodd"></path>
          </svg>
        </button>
      </div>
      
      <!-- Desktop Navigation -->
      <div class="hidden lg:flex lg:items-center lg:order-1">
        <ul class="flex flex-row space-x-8">
          <li>
            <a href="/projects" class={`cursor-pointer ${linkClasses}`}>Projects</a>
          </li>
          <li>
            <a href="/stays" class={`cursor-pointer ${linkClasses}`}>Stays</a>
          </li>
          <li>
            <a href="/blog" class={`cursor-pointer ${linkClasses}`}>Blog</a>
          </li>
          <li>
            <a href="/concierge" class={`cursor-pointer ${linkClasses}`}>Concierge</a>
          </li>
          <li>
            <a href="/submit" class={`cursor-pointer ${linkClasses}`}>Submit</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
</header>

<!-- Navigation Drawer Component -->
<NavigationDrawer theme={theme} />

<!-- Simple Search Modal -->
<div
  id="search-modal"
  role="dialog"
  aria-modal="true"
  aria-labelledby="search-modal-title"
  data-modal-placement="top-center"
  tabindex="-1"
  aria-hidden="true"
  class="hidden fixed inset-0 z-50 overflow-y-auto overflow-x-hidden backdrop-blur-sm bg-gray-900/50 dark:bg-gray-900/80"
>
  <!-- Modal backdrop -->
  <div
    class="flex items-start justify-center min-h-full p-4 sm:p-6 lg:p-8 pt-4 sm:pt-[15vh]"
  >
    <!-- Modal content -->
    <div
      class="relative w-full max-w-4xl mx-auto bg-white rounded-xl shadow-2xl dark:bg-gray-800 transform transition-all"
    >
      <!-- Search Form -->
      <form id="modal-search-form" action="/search" method="get" class="p-6">
        <div class="flex items-center space-x-3">
          <div class="flex-shrink-0">
            <svg
              class="w-6 h-6 text-gray-400"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-width="2"
                d="m21 21-3.5-3.5M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z"></path>
            </svg>
          </div>
          <div class="flex-1">
            <input
              type="search"
              name="q"
              id="modal-search-input"
              placeholder="Search our database"
              class="w-full text-lg bg-transparent border-0 outline-none text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-0"
              autocomplete="off"
              autofocus
            />
          </div>
          <div class="flex-shrink-0">
            <button
              id="close-search-modal"
              type="button"
              class="p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors"
              aria-label="Close search"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Search suggestions -->
        <div class="mt-6 pt-6 border-t border-gray-200 dark:border-gray-700">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h4
                class="text-sm font-medium text-gray-900 dark:text-white mb-3"
              >
                Suggested searches
              </h4>
              <div class="space-y-2">
                <button
                  type="button"
                  class="search-suggestion block w-full text-left px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors cursor-pointer"
                  data-query="beach cleans"
                >
                  Beach cleans
                </button>
                <button
                  type="button"
                  class="search-suggestion block w-full text-left px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors cursor-pointer"
                  data-query="community cafes"
                >
                  Community cafes
                </button>
                <button
                  type="button"
                  class="search-suggestion block w-full text-left px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors cursor-pointer"
                  data-query="animal sanctuaries"
                >
                  Animal sanctuaries
                </button>
              </div>
            </div>
            <div>
              <h4
                class="text-sm font-medium text-gray-900 dark:text-white mb-3"
              >
                Search by location
              </h4>
              <div class="space-y-2">
                <button
                  type="button"
                  class="search-suggestion block w-full text-left px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors cursor-pointer"
                  data-query="USA"
                >
                  USA
                </button>
                <button
                  type="button"
                  class="search-suggestion block w-full text-left px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors cursor-pointer"
                  data-query="UK"
                >
                  UK
                </button>
                <button
                  type="button"
                  class="search-suggestion block w-full text-left px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors cursor-pointer"
                  data-query="Thailand"
                >
                  Thailand
                </button>
              </div>
            </div>
          </div>
        </div>
      </form>

      <!-- Footer -->
      <div
        class="hidden sm:flex items-center justify-between px-6 py-4 bg-gray-50 dark:bg-gray-700/50 rounded-b-xl border-t border-gray-200 dark:border-gray-700"
      >
        <div
          class="flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400"
        >
          <div class="flex items-center space-x-1">
            <kbd
              class="px-2 py-1 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded text-xs"
              >↵</kbd
            >
            <span>to search</span>
          </div>
          <div class="flex items-center space-x-1">
            <kbd
              class="px-2 py-1 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded text-xs"
              >esc</kbd
            >
            <span>to close</span>
          </div>
        </div>
        <div class="flex space-x-2">
          <a
            href="/submit"
            class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-white hover:bg-gray-100 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg transition-colors cursor-pointer"
          >
            <svg
              class="w-3 h-3 mr-1"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Submit Project
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const searchModal = document.getElementById("search-modal");
    const modalSearchInput = document.getElementById(
      "modal-search-input"
    ) as HTMLInputElement;
    const modalSearchForm = document.getElementById(
      "modal-search-form"
    ) as HTMLFormElement;
    const searchSuggestions = document.querySelectorAll(".search-suggestion");
    const searchButton = document.getElementById("search-button");

    // Detect OS and update keyboard shortcut display
    const isMac = navigator.platform.toUpperCase().indexOf("MAC") >= 0;
    const searchKbd = document.getElementById("search-kbd");

    if (searchKbd && !isMac) {
      // Replace ⌘K with Ctrl+K for Windows/Linux
      searchKbd.textContent = "Ctrl+K";
    }

    // Custom modal show/hide functions to ensure proper focus handling
    function showModal() {
      if (searchModal) {
        searchModal.classList.remove("hidden");
        searchModal.setAttribute("aria-hidden", "false");
        // Focus input immediately in the same event cycle
        if (modalSearchInput) {
          modalSearchInput.focus();
          // Force click on input for iOS keyboard (sometimes needed)
          modalSearchInput.click();
        }
      }
    }

    function hideModal() {
      if (searchModal) {
        searchModal.classList.add("hidden");
        searchModal.setAttribute("aria-hidden", "true");
      }
    }

    // Handle search button click
    if (searchButton) {
      searchButton.addEventListener("click", (e) => {
        e.preventDefault();
        showModal();
      });
    }

    // Handle close button clicks
    const closeButton = document.getElementById("close-search-modal");
    if (closeButton) {
      closeButton.addEventListener("click", (e) => {
        e.preventDefault();
        hideModal();
      });
    }

    // Handle backdrop clicks
    if (searchModal) {
      searchModal.addEventListener("click", (e) => {
        // Only close if clicking the backdrop (not the modal content)
        if (e.target === searchModal) {
          hideModal();
        }
      });
    }

    // Handle global keyboard shortcut and escape key
    document.addEventListener("keydown", (e) => {
      // Check for Cmd+K (Mac) or Ctrl+K (Windows/Linux)
      if (
        (isMac && e.metaKey && e.key === "k") ||
        (!isMac && e.ctrlKey && e.key === "k")
      ) {
        e.preventDefault();
        showModal();
        return;
      }

      // Handle escape key to close modal
      if (
        e.key === "Escape" &&
        searchModal &&
        !searchModal.classList.contains("hidden")
      ) {
        hideModal();
      }
    });

    // Handle form submission
    if (modalSearchForm) {
      modalSearchForm.addEventListener("submit", (e) => {
        const query = modalSearchInput?.value?.trim();
        if (!query) {
          e.preventDefault();
          return;
        }
        // Form will naturally submit to /search?q=query
      });
    }

    // Handle search suggestions
    searchSuggestions.forEach((button) => {
      button.addEventListener("click", () => {
        const query = button.getAttribute("data-query");
        if (query && modalSearchInput) {
          modalSearchInput.value = query;
          modalSearchForm?.submit();
        }
      });
    });
  });
</script>
