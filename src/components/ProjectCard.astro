---
interface Props {
  project: {
    data: {
      properties: {
        pSlug: string;
        pImageURL: string;
        pCountry: string | string[];
        pTitle: string;
        pOrganiser: string;
      };
    };
  };
}

const { project } = Astro.props;
---

<article class="bg-white rounded-lg">
  <a href={`/project/${project.data.properties.pSlug}/`}>
    <img
      class="w-full rounded-lg h-64 object-cover"
      src={project.data.properties.pImageURL}
      alt=""
    />
  </a>
  <p>
    {Array.isArray(project.data.properties.pCountry)
      ? project.data.properties.pCountry.map((country: string) => (
          <span
            class="inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300 ml-2 mt-4 mb-2"
          >
            <a
              href={`/projects/${country.toLowerCase().replace(/\s+/g, "-")}`}
            >
              {country}
            </a>
          </span>
        ))
      : project.data.properties.pCountry}
  </p>
  <h2 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white px-4">
    <a href={`/project/${project.data.properties.pSlug}/`}>
      {project.data.properties.pTitle}
    </a>
  </h2>
  <p class="mt-2 inline-flex text-sm font-normal text-gray-500 dark:text-gray-400 px-4">
    <svg class="w-[20px] h-[20px] mr-2 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.3" d="M15 9h3m-3 3h3m-3 3h3m-6 1c-.306-.613-.933-1-1.618-1H7.618c-.685 0-1.312.387-1.618 1M4 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Zm7 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"/>
      </svg>
           
      {project.data.properties.pOrganiser}
  </p>
</article>