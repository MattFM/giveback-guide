---
import ResponsiveImage from "../ui/Image/ResponsiveImage.astro";
import BaseCard from "../ui/BaseCard.astro";

interface Props {
  project: any;
}

const { project } = Astro.props as Props;
---

<BaseCard>
  <div class="relative">
    <a href={`/projects/${project.data.properties.pSlug}/`}>
      <ResponsiveImage
        class="w-full rounded-lg h-64 mb-3 object-cover"
        src={project.data.properties.pImageURL}
        alt=""
        preset="card"
        fallbackWidth={600}
        transitionName={`project-${project.data.properties.pSlug}`}
      />

      {
        (project.data.properties.pVerify || project.data.properties.pFree) && (
          <div class="absolute top-2 left-2 flex items-start gap-2">
            {project.data.properties.pVerify && (
              <span class="inline-flex items-center gap-1.5 px-3 py-1.5 text-sm font-medium text-green-800 bg-green-100 rounded-full border border-green-200 shadow-sm">
                <svg xmlns="http://www.w3.org/2000/svg" height="18px" viewBox="0 -960 960 960" width="18px" fill="currentColor">
                  <path d="m346-60-76-130-151-31 17-147-96-112 96-111-17-147 151-31 76-131 134 62 134-62 77 131 150 31-17 147 96 111-96 112 17 147-150 31-77 130-134-62-134 62Zm91-287 227-225-45-41-182 180-95-99-46 45 141 140Z"/>
                </svg>
                <span class="text-xs font-semibold">Verified</span>
              </span>
            )}
            {project.data.properties.pFree && (
              <span class="inline-flex items-center gap-1.5 px-3 py-1.5 text-sm font-medium text-amber-800 bg-amber-100 rounded-full border border-amber-200 shadow-sm">
                <svg xmlns="http://www.w3.org/2000/svg" height="18px" viewBox="0 -960 960 960" width="18px" fill="currentColor">
                  <path d="M444-200h70v-50q50-9 86-39t36-89q0-42-24-77t-96-61q-60-20-83-35t-23-41q0-26 18.5-41t53.5-15q32 0 50 15.5t26 38.5l64-26q-11-35-40.5-61T516-710v-50h-70v50q-50 11-78 44t-28 74q0 47 27.5 76t86.5 50q63 23 87.5 41t24.5 47q0 33-23.5 48.5T486-314q-33 0-58.5-20.5T390-396l-66 26q14 48 43.5 77.5T444-252v52Zm36 120q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Z"/>
                </svg>
                <span class="text-xs font-semibold">Free</span>
              </span>
            )}
          </div>
        )
      }
    </a>
    <!-- Save badge removed from card; Save control appears only on individual pages -->
  </div>
  <div class="mb-2">
    {
      (() => {
        const countries = project.data.properties.pCountry;
        const countryArray = Array.isArray(countries) ? countries : [countries];
        
        return countryArray
          .filter((country: string) => country !== "United Kingdom" && country !== "UK")
          .map((country: string) => (
            <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium border border-gray-300 text-gray-700 dark:border-gray-600 dark:text-gray-300 mr-1.5">
              {country}
            </span>
          ));
      })()
    }
  </div>
  <h2
    class="mb-2 text-2xl font-medium tracking-tight text-gray-900 dark:text-white"
  >
    <a href={`/projects/${project.data.properties.pSlug}/`} style={`view-transition-name: project-title-${project.data.properties.pSlug}`}>
      {project.data.properties.pTitle}
    </a>
  </h2>
  <p class="mt-2 text-sm font-normal text-gray-400 dark:text-gray-400">
    {project.data.properties.pOrganiser} in
    {
      (() => {
        const locales = project.data.properties.pLocale;
        
        // Format locales
        if (Array.isArray(locales)) {
          if (locales.length === 0) return "";
          if (locales.length === 1) return locales[0];
          if (locales.length === 2) return `${locales[0]} & ${locales[1]}`;
          return locales.slice(0, -1).join(", ") + " & " + locales[locales.length - 1];
        }
        return locales;
      })()
    }
  </p>
</BaseCard>
