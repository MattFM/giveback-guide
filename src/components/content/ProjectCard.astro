---
import ResponsiveImage from "../ui/Image/ResponsiveImage.astro";
import BaseCard from "../ui/BaseCard.astro";

interface Props {
  project: any;
}

const { project } = Astro.props as Props;
---

<BaseCard>
  <div class="relative">
    <a href={`/projects/${project.data.properties.pSlug}/`}>
      <ResponsiveImage
        class="w-full rounded-lg h-64 mb-3 object-cover"
        src={project.data.properties.pImageURL}
        alt=""
        preset="card"
        fallbackWidth={600}
      />

      {
        (project.data.properties.pVerify || project.data.properties.pFree) && (
          <div class="absolute top-2 left-2 flex items-start gap-2">
            {project.data.properties.pVerify && (
              <div class="bg-gbgyellow bg-opacity-80 rounded-lg px-2.5 py-1 flex items-center gap-1 shadow-sm">
                <svg
                  class="h-5 w-5 text-black"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    fill-rule="evenodd"
                    d="M12 2c-.791 0-1.55.314-2.11.874l-.893.893a.985.985 0 0 1-.696.288H7.04A2.984 2.984 0 0 0 4.055 7.04v1.262a.986.986 0 0 1-.288.696l-.893.893a2.984 2.984 0 0 0 0 4.22l.893.893a.985.985 0 0 1 .288.696v1.262a2.984 2.984 0 0 0 2.984 2.984h1.262c.261 0 .512.104.696.288l.893.893a2.984 2.984 0 0 0 4.22 0l.893-.893a.985.985 0 0 1 .696-.288h1.262a2.984 2.984 0 0 0 2.984-2.984V15.7c0-.261.104-.512.288-.696l.893-.893a2.984 2.984 0 0 0 0-4.22l-.893-.893a.985.985 0 0 1-.288-.696V7.04a2.984 2.984 0 0 0-2.984-2.984h-1.262a.985.985 0 0 1-.696-.288l-.893-.893A2.984 2.984 0 0 0 12 2Zm3.683 7.73a1 1 0 1 0-1.414-1.413l-4.253 4.253-1.277-1.277a1 1 0 0 0-1.415 1.414l1.985 1.984a1 1 0 0 0 1.414 0l4.96-4.96Z"
                    clip-rule="evenodd"
                  />
                </svg>
                <p class="text-xs font-medium text-black">
                  {project.data.properties.pVerify}
                </p>
              </div>
            )}
            {project.data.properties.pFree && (
              <div class="rounded-lg px-2.5 py-1 flex items-center gap-1 bg-[#e3dcf6] bg-opacity-80 shadow-sm">
                <svg
                  class="w-5 h-5 text-gray-800"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M18.5 12A2.5 2.5 0 0 1 21 9.5V7a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v2.5a2.5 2.5 0 0 1 0 5V17a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-2.5a2.5 2.5 0 0 1-2.5-2.5Z"
                  />
                </svg>

                <p class="text-xs font-medium text-gray-800">Free</p>
              </div>
            )}
          </div>
        )
      }
    </a>
    <!-- Save badge removed from card; Save control appears only on individual pages -->
  </div>
  <div class="mb-2">
    {
      (() => {
        const countries = project.data.properties.pCountry;
        const countryArray = Array.isArray(countries) ? countries : [countries];
        
        return countryArray
          .filter((country: string) => country !== "United Kingdom" && country !== "UK")
          .map((country: string) => (
            <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium border border-gray-300 text-gray-700 dark:border-gray-600 dark:text-gray-300 mr-1.5">
              {country}
            </span>
          ));
      })()
    }
  </div>
  <h2
    class="mb-2 text-2xl font-medium tracking-tight text-gray-900 dark:text-white"
  >
    <a href={`/projects/${project.data.properties.pSlug}/`}>
      {project.data.properties.pTitle}
    </a>
  </h2>
  <p class="mt-2 text-sm font-normal text-gray-400 dark:text-gray-400">
    {project.data.properties.pOrganiser} in
    {
      (() => {
        const locales = project.data.properties.pLocale;
        
        // Format locales
        if (Array.isArray(locales)) {
          if (locales.length === 0) return "";
          if (locales.length === 1) return locales[0];
          if (locales.length === 2) return `${locales[0]} & ${locales[1]}`;
          return locales.slice(0, -1).join(", ") + " & " + locales[locales.length - 1];
        }
        return locales;
      })()
    }
  </p>
</BaseCard>
