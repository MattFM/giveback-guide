---
import { getCollection } from "astro:content";

const projects = await getCollection("projects");

// Count the number of projects for each country
const countryCounts = projects.reduce((acc: Record<string, number>, project) => {
  const countries = Array.isArray(project.data.properties.pCountry)
    ? project.data.properties.pCountry
    : [project.data.properties.pCountry];

  countries.forEach((country) => {
    if (country) {
      acc[country] = (acc[country] || 0) + 1;
    }
  });

  return acc;
}, {});

// Extract unique countries and sort alphabetically
const uniqueCountries = Object.keys(countryCounts).sort();
---
<button
  id="dropdownDefaultButton"
  data-dropdown-toggle="dropdown"
  class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
  type="button"
  >Countries <svg
    class="w-2.5 h-2.5 ms-3"
    aria-hidden="true"
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 10 6"
  >
    <path
      stroke="currentColor"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="m1 1 4 4 4-4"></path>
  </svg>
</button>

<!-- Dropdown menu -->
<div
  id="dropdown"
  class="z-50 hidden bg-white divide-y divide-gray-100 rounded-lg shadow-sm w-44 dark:bg-gray-700"
>
  <ul
    class="h-60 py-2 overflow-y-auto text-gray-700 dark:text-gray-200"
    aria-labelledby="dropdownDefaultButton"
  >
  {uniqueCountries.map((country) => (
    <li>
      <a
          class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
          href={`/projects/${country.toLowerCase().replace(/\s+/g, "-")}`}
        >
          {country} ({countryCounts[country]})
        </a>
    </li>
  ))}
  </ul>
</div>
