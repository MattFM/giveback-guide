---
import MainLayout from '../../layouts/MainLayout.astro';
---

<MainLayout title="Verifying...">
    <div class="max-w-md mx-auto mt-8 p-6 bg-white rounded-lg shadow-md">
        <div id="status" class="text-center">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4"></div>
            <p>Verifying your login...</p>
        </div>
    </div>
</MainLayout>

<script>
    import { account, updateMagicURLSession } from '../../lib/auth';

    const updateStatus = (message: string, isError = false) => {
        const statusDiv = document.getElementById('status');
        if (statusDiv) {
            statusDiv.innerHTML = `<p class="${isError ? 'text-red-500' : ''}">${message}</p>`;
        }
    };

    // Get URL parameters used by some auth providers (userId & secret) or
    // leave empty for providers that complete sessions from the URL hash.
    const urlParams = new URLSearchParams(window.location.search);
    const userId = urlParams.get('userId');
    const secret = urlParams.get('secret');

    // Show the current URL on the page to help debug redirect issues
    const statusDiv = document.getElementById('status');
    if (statusDiv) {
        const p = document.createElement('p');
        p.className = 'text-sm text-gray-600 mb-2';
        p.textContent = `Current URL: ${window.location.href}`;
        statusDiv.prepend(p);
    }

    try {
        // Call the provider-agnostic helper exposed by src/lib/auth.
    // The provider-specific implementation will either accept (userId, secret)
    // or inspect the current URL to complete the session (e.g. Supabase).
        if (typeof updateMagicURLSession !== 'function') throw new Error('No updateMagicURLSession available on auth provider');

        if (userId && secret) {
            await updateMagicURLSession(userId, secret);
        } else {
            await updateMagicURLSession();
        }

        updateStatus('Login successful! Redirecting...');

        // After verifying, send user to onboarding which will route further.
        window.location.href = '/auth/onboarding';
    } catch (error) {
        // Log the error and show a friendly message with details for debugging
        console.error('Magic link verification error:', error);
    const errAny: any = error;
    const errText = (errAny && (errAny.message || JSON.stringify(errAny))) || String(errAny);
        updateStatus(`Invalid or expired magic link. ${errText}`.trim(), true);

        // Also show the error details on the page for quick inspection in dev
        if (statusDiv) {
            const e = document.createElement('pre');
            e.className = 'text-xs text-red-500 mt-2';
            e.textContent = `Error: ${errText}\nURL: ${window.location.href}`;
            statusDiv.appendChild(e);
        }

        setTimeout(() => {
            window.location.href = '/auth/login';
        }, 3000);
    }
</script>
